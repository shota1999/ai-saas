generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String                 @id @default(cuid())
  name                 String?
  email                String?                @unique
  emailVerified        DateTime?
  image                String?
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  planId               String?  
  plan                 Plan?                  @relation(fields: [planId], references: [id])
  accounts             Account[]
  apiRequestCounterLog ApiRequestCounterLog[]
  history              GenerationHistory[]
  sessions             Session[]
  usageStat            UsageStat[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model GenerationHistory {
  id        String   @id @default(cuid())
  prompt    String
  result    String
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model UsageStat {
  id          String   @id @default(cuid())
  userId      String
  creditsUsed Int
  date        DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])

  @@unique([userId, date], name: "userId_date")
}

model ApiRequestCounterLog {
  id        String   @id @default(cuid())
  userId    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Plan {
  id      String   @id @default(cuid())
  name    String
  credits Int
  price   Float
  users   User[]
}